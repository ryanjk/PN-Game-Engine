#version 450 core

in VS_OUT {
	vec3 position;
	vec3 normal;
	vec3 colour;
} fs_in;

uniform vec3 lightPosition;
uniform vec3 cameraPosition;

out vec4 colour;

void main() {
	vec3 ambientLight = vec3(0.1, 0.1, 0.0);
	vec3 light = vec3(0.6, 0.6, 0.0);
	vec3 specularHighlight = vec3(0.5, 0.5, 0.5);
	
	vec3 LandV = lightPosition - fs_in.position + cameraPosition - fs_in.position;
	vec3 H = normalize(LandV);
	
	vec3 R = reflect(-1 * normalize(lightPosition - fs_in.position), normalize(fs_in.normal));
	
	int blinnExp = 100;
	
	colour =  vec4(ambientLight + 
		(max(0, dot(normalize(fs_in.normal), normalize(lightPosition - fs_in.position))) * light +
		pow(max(0, dot(R, normalize(cameraPosition - fs_in.position))), blinnExp) * specularHighlight) * (1 / pow(length(lightPosition - fs_in.position), 1))
		, 1.0);
}